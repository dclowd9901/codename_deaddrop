0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'mongodb' ]
2 info using npm@1.1.48
3 info using node@v0.8.6
4 verbose config file /Users/dclowd9901/.npmrc
5 verbose config file /usr/local/etc/npmrc
6 verbose config file /usr/local/lib/node_modules/npm/npmrc
7 verbose read json /node/projects/deaddrop/package.json
8 verbose read json /node/projects/deaddrop/node_modules/backbone/package.json
9 verbose read json /node/projects/deaddrop/node_modules/express/package.json
10 verbose read json /node/projects/deaddrop/node_modules/hotnode/package.json
11 verbose read json /node/projects/deaddrop/node_modules/mu2/package.json
12 verbose read json /node/projects/deaddrop/node_modules/require/package.json
13 verbose read json /node/projects/deaddrop/node_modules/underscore/package.json
14 verbose read json /node/projects/deaddrop/node_modules/zepto/package.json
15 verbose read json /node/projects/deaddrop/package.json
16 verbose cache add [ 'mongodb', null ]
17 silly cache add name=undefined spec="mongodb" args=["mongodb",null]
18 verbose parsed url { pathname: 'mongodb', path: 'mongodb', href: 'mongodb' }
19 silly lockFile 7f1c982e-mongodb mongodb
20 verbose lock mongodb /Users/dclowd9901/.npm/7f1c982e-mongodb.lock
21 silly lockFile 7f1c982e-mongodb mongodb
22 verbose addNamed [ 'mongodb', '' ]
23 verbose addNamed [ null, '' ]
24 silly lockFile 886df635-mongodb mongodb@
25 verbose lock mongodb@ /Users/dclowd9901/.npm/886df635-mongodb.lock
26 silly addNameRange { name: 'mongodb', range: '', hasData: false }
27 verbose url raw mongodb
28 verbose url resolving [ 'https://registry.npmjs.org/', './mongodb' ]
29 verbose url resolved https://registry.npmjs.org/mongodb
30 info retry registry request attempt 1 at 08:36:00
31 verbose etag "CQXA6RLV1CSQ1A9Y1CVF6W2XB"
32 http GET https://registry.npmjs.org/mongodb
33 http 304 https://registry.npmjs.org/mongodb
34 silly registry.get cb [ 304,
34 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
34 silly registry.get     etag: '"CQXA6RLV1CSQ1A9Y1CVF6W2XB"',
34 silly registry.get     date: 'Wed, 15 Aug 2012 15:36:01 GMT',
34 silly registry.get     'content-length': '0' } ]
35 verbose etag mongodb from cache
36 silly addNameRange number 2 { name: 'mongodb', range: '', hasData: true }
37 silly addNameRange versions [ 'mongodb',
37 silly addNameRange   [ '0.9.4',
37 silly addNameRange     '0.9.4-4',
37 silly addNameRange     '0.9.3',
37 silly addNameRange     '0.9.1',
37 silly addNameRange     '0.9.2',
37 silly addNameRange     '0.9.6-7',
37 silly addNameRange     '0.9.6-8',
37 silly addNameRange     '0.9.6-9',
37 silly addNameRange     '0.9.6-10',
37 silly addNameRange     '0.9.6-11',
37 silly addNameRange     '0.9.6-12',
37 silly addNameRange     '0.9.6-13',
37 silly addNameRange     '0.9.6-14',
37 silly addNameRange     '0.9.6-15',
37 silly addNameRange     '0.9.6-16',
37 silly addNameRange     '0.9.6-17',
37 silly addNameRange     '0.9.6-18',
37 silly addNameRange     '0.9.6-19',
37 silly addNameRange     '0.9.6-20',
37 silly addNameRange     '0.9.6-21',
37 silly addNameRange     '0.9.6-22',
37 silly addNameRange     '0.9.6-23',
37 silly addNameRange     '0.9.7',
37 silly addNameRange     '0.9.7-0',
37 silly addNameRange     '0.9.7-1',
37 silly addNameRange     '0.9.7-1.1',
37 silly addNameRange     '0.9.7-1.2',
37 silly addNameRange     '0.9.7-1.3',
37 silly addNameRange     '0.9.7-1.4',
37 silly addNameRange     '0.9.7-2',
37 silly addNameRange     '0.9.7-2-1',
37 silly addNameRange     '0.9.7-2-2',
37 silly addNameRange     '0.9.7-2-3',
37 silly addNameRange     '0.9.7-2-4',
37 silly addNameRange     '0.9.7-2-5',
37 silly addNameRange     '0.9.7-3',
37 silly addNameRange     '0.9.7-3-1',
37 silly addNameRange     '0.9.7-3-2',
37 silly addNameRange     '0.9.7-3-3',
37 silly addNameRange     '0.9.7-3-4',
37 silly addNameRange     '0.9.7-3-5',
37 silly addNameRange     '0.9.8',
37 silly addNameRange     '0.9.8-1',
37 silly addNameRange     '0.9.8-2',
37 silly addNameRange     '0.9.8-3',
37 silly addNameRange     '0.9.8-4',
37 silly addNameRange     '0.9.8-5',
37 silly addNameRange     '0.9.8-6',
37 silly addNameRange     '0.9.8-7',
37 silly addNameRange     '0.9.9',
37 silly addNameRange     '0.9.9-1',
37 silly addNameRange     '0.9.9-2',
37 silly addNameRange     '0.9.9-3',
37 silly addNameRange     '0.9.9-4',
37 silly addNameRange     '0.9.9-5',
37 silly addNameRange     '0.9.9-6',
37 silly addNameRange     '0.9.9-7',
37 silly addNameRange     '0.9.9-8',
37 silly addNameRange     '1.0.0',
37 silly addNameRange     '1.0.1',
37 silly addNameRange     '1.0.2',
37 silly addNameRange     '1.1.0-beta',
37 silly addNameRange     '1.1.0',
37 silly addNameRange     '1.1.1',
37 silly addNameRange     '1.1.2',
37 silly addNameRange     '1.1.3',
37 silly addNameRange     '1.1.4' ] ]
38 verbose addNamed [ 'mongodb', '1.1.4' ]
39 verbose addNamed [ '1.1.4', '1.1.4' ]
40 silly lockFile 7b6eea7c-mongodb-1-1-4 mongodb@1.1.4
41 verbose lock mongodb@1.1.4 /Users/dclowd9901/.npm/7b6eea7c-mongodb-1-1-4.lock
42 verbose read json /Users/dclowd9901/.npm/mongodb/1.1.4/package/package.json
43 silly lockFile 7b6eea7c-mongodb-1-1-4 mongodb@1.1.4
44 silly lockFile 886df635-mongodb mongodb@
45 silly resolved [ { name: 'mongodb',
45 silly resolved     description: 'A node.js driver for MongoDB',
45 silly resolved     keywords: [ 'mongodb', 'mongo', 'driver', 'db' ],
45 silly resolved     version: '1.1.4',
45 silly resolved     author: { name: 'Christian Amor Kvalheim', email: 'christkv@gmail.com' },
45 silly resolved     contributors:
45 silly resolved      [ [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object] ],
45 silly resolved     repository:
45 silly resolved      { type: 'git',
45 silly resolved        url: 'http://github.com/mongodb/node-mongodb-native.git' },
45 silly resolved     bugs:
45 silly resolved      { mail: 'node-mongodb-native@googlegroups.com',
45 silly resolved        url: 'http://github.com/mongodb/node-mongodb-native/issues' },
45 silly resolved     dependencies: { bson: '0.1.1' },
45 silly resolved     devDependencies:
45 silly resolved      { dox: '0.2.0',
45 silly resolved        'uglify-js': '1.2.5',
45 silly resolved        ejs: '0.6.1',
45 silly resolved        nodeunit: '0.7.4',
45 silly resolved        github3: '>=0.3.0',
45 silly resolved        markdown: '0.3.1',
45 silly resolved        gleak: '0.2.3',
45 silly resolved        step: '0.0.5',
45 silly resolved        async: '0.1.22' },
45 silly resolved     config: { native: false },
45 silly resolved     main: './lib/mongodb/index',
45 silly resolved     directories: { lib: './lib/mongodb' },
45 silly resolved     engines: { node: '>=0.4.0' },
45 silly resolved     scripts: { test: 'make test_pure' },
45 silly resolved     licenses: [ [Object] ],
45 silly resolved     readme: 'Up to date documentation\n========================\n\n[Documentation](http://mongodb.github.com/node-mongodb-native/)\n\nInstall\n=======\n\nTo install the most recent release from npm, run:\n\n    npm install mongodb\n\nThat may give you a warning telling you that bugs[\'web\'] should be bugs[\'url\'], it would be safe to ignore it (this has been fixed in the development version)\n\nTo install the latest from the repository, run::\n\n    npm install path/to/node-mongodb-native\n\nCommunity\n=========\nCheck out the google group [node-mongodb-native](http://groups.google.com/group/node-mongodb-native) for questions/answers from users of the driver.\n\nIntroduction\n============\n\nThis is a node.js driver for MongoDB. It\'s a port (or close to a port) of the library for ruby at http://github.com/mongodb/mongo-ruby-driver/.\n\nA simple example of inserting a document.\n\n    var client = new Db(\'test\', new Server("127.0.0.1", 27017, {})),\n        test = function (err, collection) {\n          collection.insert({a:2}, function(err, docs) {\n\n            collection.count(function(err, count) {\n              test.assertEquals(1, count);\n            });\n\n            // Locate all the entries using find\n            collection.find().toArray(function(err, results) {\n              test.assertEquals(1, results.length);\n              test.assertTrue(results[0].a === 2);\n\n              // Let\'s close the db\n              client.close();\n            });\n          });\n        };\n\n    client.open(function(err, p_client) {\n      client.collection(\'test_insert\', test);\n    });\n\nData types\n==========\n\nTo store and retrieve the non-JSON MongoDb primitives ([ObjectID](http://www.mongodb.org/display/DOCS/Object+IDs), Long, Binary, [Timestamp](http://www.mongodb.org/display/DOCS/Timestamp+data+type), [DBRef](http://www.mongodb.org/display/DOCS/Database+References#DatabaseReferences-DBRef), Code).\n\nIn particular, every document has a unique `_id` which can be almost any type, and by default a 12-byte ObjectID is created. ObjectIDs can be represented as 24-digit hexadecimal strings, but you must convert the string back into an ObjectID before you can use it in the database. For example:\n\n    // Get the objectID type\n    var ObjectID = require(\'mongodb\').ObjectID;\n\n    var idString = \'4e4e1638c85e808431000003\';\n    collection.findOne({_id: new ObjectID(idString)}, console.log)  // ok\n    collection.findOne({_id: idString}, console.log)  // wrong! callback gets undefined\n\nHere are the constructors the non-Javascript BSON primitive types:\n\n    // Fetch the library\n    var mongo = require(\'mongodb\');\n    // Create new instances of BSON types\n    new mongo.Long(numberString)\n    new mongo.ObjectID(hexString)\n    new mongo.Timestamp()  // the actual unique number is generated on insert.\n    new mongo.DBRef(collectionName, id, dbName)\n    new mongo.Binary(buffer)  // takes a string or Buffer\n    new mongo.Code(code, [context])\n    new mongo.Symbol(string)\n    new mongo.MinKey()\n    new mongo.MaxKey()\n    new mongo.Double(number)\t// Force double storage\n\nThe C/C++ bson parser/serializer\n--------------------------------\n\nIf you are running a version of this library has the C/C++ parser compiled, to enable the driver to use the C/C++ bson parser pass it the option native_parser:true like below\n\n    // using native_parser:\n    var client = new Db(\'integration_tests_20\',\n                        new Server("127.0.0.1", 27017),\n                        {native_parser:true});\n\nThe C++ parser uses the js objects both for serialization and deserialization.\n\nGitHub information\n==================\n\nThe source code is available at http://github.com/mongodb/node-mongodb-native.\nYou can either clone the repository or download a tarball of the latest release.\n\nOnce you have the source you can test the driver by running\n\n    $ make test\n\nin the main directory. You will need to have a mongo instance running on localhost for the integration tests to pass.\n\nExamples\n========\n\nFor examples look in the examples/ directory. You can execute the examples using node.\n\n    $ cd examples\n    $ node queries.js\n\nGridStore\n=========\n\nThe GridStore class allows for storage of binary files in mongoDB using the mongoDB defined files and chunks collection definition.\n\nFor more information have a look at [Gridstore](https://github.com/mongodb/node-mongodb-native/blob/master/docs/gridfs.md)\n\nReplicasets\n===========\nFor more information about how to connect to a replicaset have a look at [Replicasets](https://github.com/mongodb/node-mongodb-native/blob/master/docs/replicaset.md)\n\nPrimary Key Factories\n---------------------\n\nDefining your own primary key factory allows you to generate your own series of id\'s\n(this could f.ex be to use something like ISBN numbers). The generated the id needs to be a 12 byte long "string".\n\nSimple example below\n\n    // Custom factory (need to provide a 12 byte array);\n    CustomPKFactory = function() {}\n    CustomPKFactory.prototype = new Object();\n    CustomPKFactory.createPk = function() {\n      return new ObjectID("aaaaaaaaaaaa");\n    }\n\n    var p_client = new Db(\'integration_tests_20\', new Server("127.0.0.1", 27017, {}), {\'pk\':CustomPKFactory});\n    p_client.open(function(err, p_client) {\n      p_client.dropDatabase(function(err, done) {\n        p_client.createCollection(\'test_custom_key\', function(err, collection) {\n          collection.insert({\'a\':1}, function(err, docs) {\n            collection.find({\'_id\':new ObjectID("aaaaaaaaaaaa")}, function(err, cursor) {\n              cursor.toArray(function(err, items) {\n                test.assertEquals(1, items.length);\n\n                // Let\'s close the db\n                p_client.close();\n              });\n            });\n          });\n        });\n      });\n    });\n\nStrict mode\n-----------\n\nEach database has an optional strict mode. If it is set then asking for a collection\nthat does not exist will return an Error object in the callback. Similarly if you\nattempt to create a collection that already exists. Strict is provided for convenience.\n\n    var error_client = new Db(\'integration_tests_\', new Server("127.0.0.1", 27017, {auto_reconnect: false}), {strict:true});\n      test.assertEquals(true, error_client.strict);\n\n      error_client.open(function(err, error_client) {\n      error_client.collection(\'does-not-exist\', function(err, collection) {\n        test.assertTrue(err instanceof Error);\n        test.assertEquals("Collection does-not-exist does not exist. Currently in strict mode.", err.message);\n      });\n\n      error_client.createCollection(\'test_strict_access_collection\', function(err, collection) {\n        error_client.collection(\'test_strict_access_collection\', function(err, collection) {\n          test.assertTrue(collection instanceof Collection);\n          // Let\'s close the db\n          error_client.close();\n        });\n      });\n    });\n\nDocumentation\n=============\n\nIf this document doesn\'t answer your questions, see the source of\n[Collection](https://github.com/mongodb/node-mongodb-native/blob/master/lib/mongodb/collection.js)\nor [Cursor](https://github.com/mongodb/node-mongodb-native/blob/master/lib/mongodb/cursor.js),\nor the documentation at MongoDB for query and update formats.\n\nFind\n----\n\nThe find method is actually a factory method to create\nCursor objects. A Cursor lazily uses the connection the first time\nyou call `nextObject`, `each`, or `toArray`.\n\nThe basic operation on a cursor is the `nextObject` method\nthat fetches the next matching document from the database. The convenience\nmethods `each` and `toArray` call `nextObject` until the cursor is exhausted.\n\nSignatures:\n\n    var cursor = collection.find(query, [fields], options);\n    cursor.sort(fields).limit(n).skip(m).\n\n    cursor.nextObject(function(err, doc) {});\n    cursor.each(function(err, doc) {});\n    cursor.toArray(function(err, docs) {});\n\n    cursor.rewind()  // reset the cursor to its initial state.\n\nUseful chainable methods of cursor. These can optionally be options of `find` instead of method calls:\n\n* `.limit(n).skip(m)` to control paging.\n* `.sort(fields)` Order by the given fields. There are several equivalent syntaxes:\n  * `.sort({field1: -1, field2: 1})` descending by field1, then ascending by field2.\n  * `.sort([[\'field1\', \'desc\'], [\'field2\', \'asc\']])` same as above\n  * `.sort([[\'field1\', \'desc\'], \'field2\'])` same as above\n  * `.sort(\'field1\')` ascending by field1\n\nOther options of `find`:\n\n* `fields` the fields to fetch (to avoid transferring the entire document)\n* `tailable` if true, makes the cursor [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors).\n* `batchSize` The number of the subset of results to request the database\nto return for every request. This should initially be greater than 1 otherwise\nthe database will automatically close the cursor. The batch size can be set to 1\nwith `batchSize(n, function(err){})` after performing the initial query to the database.\n* `hint` See [Optimization: hint](http://www.mongodb.org/display/DOCS/Optimization#Optimization-Hint).\n* `explain` turns this into an explain query. You can also call\n`explain()` on any cursor to fetch the explanation.\n* `snapshot` prevents documents that are updated while the query is active\nfrom being returned multiple times. See more\n[details about query snapshots](http://www.mongodb.org/display/DOCS/How+to+do+Snapshotted+Queries+in+the+Mongo+Database).\n* `timeout` if false, asks MongoDb not to time out this cursor after an\ninactivity period.\n\n\nFor information on how to create queries, see the\n[MongoDB section on querying](http://www.mongodb.org/display/DOCS/Querying).\n\n    var mongodb = require(\'mongodb\');\n    var server = new mongodb.Server("127.0.0.1", 27017, {});\n    new mongodb.Db(\'test\', server, {}).open(function (error, client) {\n      if (error) throw error;\n      var collection = new mongodb.Collection(client, \'test_collection\');\n      collection.find({}, {limit:10}).toArray(function(err, docs) {\n        console.dir(docs);\n      });\n    });\n\nInsert\n------\n\nSignature:\n\n    collection.insert(docs, options, [callback]);\n\nwhere `docs` can be a single document or an array of documents.\n\nUseful options:\n\n* `safe:true` Should always set if you have a callback.\n\nSee also: [MongoDB docs for insert](http://www.mongodb.org/display/DOCS/Inserting).\n\n    var mongodb = require(\'mongodb\');\n    var server = new mongodb.Server("127.0.0.1", 27017, {});\n    new mongodb.Db(\'test\', server, {}).open(function (error, client) {\n      if (error) throw error;\n      var collection = new mongodb.Collection(client, \'test_collection\');\n      collection.insert({hello: \'world\'}, {safe:true},\n                        function(err, objects) {\n        if (err) console.warn(err.message);\n        if (err && err.message.indexOf(\'E11000 \') !== -1) {\n          // this _id was already inserted in the database\n        }\n      });\n    });\n\nNote that there\'s no reason to pass a callback to the insert or update commands\nunless you use the `safe:true` option. If you don\'t specify `safe:true`, then\nyour callback will be called immediately.\n\nUpdate; update and insert (upsert)\n----------------------------------\n\nThe update operation will update the first document that matches your query\n(or all documents that match if you use `multi:true`).\nIf `safe:true`, `upsert` is not set, and no documents match, your callback will return 0 documents updated.\n\nSee the [MongoDB docs](http://www.mongodb.org/display/DOCS/Updating) for\nthe modifier (`$inc`, `$set`, `$push`, etc.) formats.\n\nSignature:\n\n    collection.update(criteria, objNew, options, [callback]);\n\nUseful options:\n\n* `safe:true` Should always set if you have a callback.\n* `multi:true` If set, all matching documents are updated, not just the first.\n* `upsert:true` Atomically inserts the document if no documents matched.\n\nExample for `update`:\n\n    var mongodb = require(\'mongodb\');\n    var server = new mongodb.Server("127.0.0.1", 27017, {});\n    new mongodb.Db(\'test\', server, {}).open(function (error, client) {\n      if (error) throw error;\n      var collection = new mongodb.Collection(client, \'test_collection\');\n      collection.update({hi: \'here\'}, {$set: {hi: \'there\'}}, {safe:true},\n                        function(err) {\n        if (err) console.warn(err.message);\n        else console.log(\'successfully updated\');\n      });\n    });\n\nFind and modify\n---------------\n\n`findAndModify` is like `update`, but it also gives the updated document to\nyour callback. But there are a few key differences between findAndModify and\nupdate:\n\n  1. The signatures differ.\n  2. You can only findAndModify a single item, not multiple items.\n\nSignature:\n\n    collection.findAndModify(query, sort, update, options, callback)\n\nThe sort parameter is used to specify which object to operate on, if more than\none document matches. It takes the same format as the cursor sort (see\nConnection.find above).\n\nSee the\n[MongoDB docs for findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command)\nfor more details.\n\nUseful options:\n\n* `remove:true` set to a true to remove the object before returning\n* `new:true` set to true if you want to return the modified object rather than the original. Ignored for remove.\n* `upsert:true` Atomically inserts the document if no documents matched.\n\nExample for `findAndModify`:\n\n    var mongodb = require(\'mongodb\');\n    var server = new mongodb.Server("127.0.0.1", 27017, {});\n    new mongodb.Db(\'test\', server, {}).open(function (error, client) {\n      if (error) throw error;\n      var collection = new mongodb.Collection(client, \'test_collection\');\n      collection.findAndModify({hello: \'world\'}, [[\'_id\',\'asc\']], {$set: {hi: \'there\'}}, {},\n                        function(err, object) {\n        if (err) console.warn(err.message);\n        else console.dir(object);  // undefined if no matching object exists.\n      });\n    });\n\nSave\n----\n\nThe `save` method is a shorthand for upsert if the document contains an\n`_id`, or an insert if there is no `_id`.\n\nSponsors\n========\nJust as Felix Geisendörfer I\'m also working on the driver for my own startup and this driver is a big project that also benefits other companies who are using MongoDB.\n\nIf your company could benefit from a even better-engineered node.js mongodb driver I would appreciate any type of sponsorship you may be able to provide. All the sponsors will get a lifetime display in this readme, priority support and help on problems and votes on the roadmap decisions for the driver. If you are interested contact me on [christkv AT g m a i l.com](mailto:christkv@gmail.com) for details.\n\nAnd I\'m very thankful for code contributions. If you are interested in working on features please contact me so we can discuss API design and testing.\n\nRelease Notes\n=============\n\nSee HISTORY\n\nCredits\n=======\n\n1. [10gen](http://github.com/mongodb/mongo-ruby-driver/)\n2. [Google Closure Library](http://code.google.com/closure/library/)\n3. [Jonas Raoni Soares Silva](http://jsfromhell.com/classes/binary-parser)\n\nContributors\n============\n\nAaron Heckmann, Christoph Pojer, Pau Ramon Revilla, Nathan White, Emmerman, Seth LaForge, Boris Filipov, Stefan Schärmeli, Tedde Lundgren, renctan, Sergey Ukustov, Ciaran Jessup, kuno, srimonti, Erik Abele, Pratik Daga, Slobodan Utvic, Kristina Chodorow, Yonathan Randolph, Brian Noguchi, Sam Epstein, James Harrison Fisher, Vladimir Dronnikov, Ben Hockey, Henrik Johansson, Simon Weare, Alex Gorbatchev, Shimon Doodkin, Kyle Mueller, Eran Hammer-Lahav, Marcin Ciszak, François de Metz, Vinay Pulim, nstielau, Adam Wiggins, entrinzikyl, Jeremy Selier, Ian Millington, Public Keating, andrewjstone, Christopher Stott, Corey Jewett, brettkiefer, Rob Holland, Senmiao Liu, heroic, gitfy\n\nLicense\n=======\n\n Copyright 2009 - 2012 Christian Amor Kvalheim.\n\n   Licensed under the Apache License, Version 2.0 (the "License");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an "AS IS" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n',
45 silly resolved     _id: 'mongodb@1.1.4',
45 silly resolved     _from: 'mongodb' } ]
46 info install mongodb@1.1.4 into /node/projects/deaddrop
47 info installOne mongodb@1.1.4
48 verbose from cache /Users/dclowd9901/.npm/mongodb/1.1.4/package/package.json
49 info /node/projects/deaddrop/node_modules/mongodb unbuild
50 verbose read json /node/projects/deaddrop/node_modules/mongodb/package.json
51 verbose tar unpack /Users/dclowd9901/.npm/mongodb/1.1.4/package.tgz
52 silly lockFile 27020782-ts-deaddrop-node-modules-mongodb /node/projects/deaddrop/node_modules/mongodb
53 verbose lock /node/projects/deaddrop/node_modules/mongodb /Users/dclowd9901/.npm/27020782-ts-deaddrop-node-modules-mongodb.lock
54 silly gunzTarPerm modes [ '755', '644' ]
55 silly gunzTarPerm extractEntry package.json
56 silly gunzTarPerm extractEntry index.js
57 silly gunzTarPerm extractEntry install.js
58 silly gunzTarPerm extractEntry .tm_properties
59 silly gunzTarPerm extractEntry lib/mongodb/admin.js
60 silly gunzTarPerm extractEntry lib/mongodb/index.js
61 silly gunzTarPerm extractEntry lib/mongodb/db.js
62 silly gunzTarPerm extractEntry lib/mongodb/cursor.js
63 silly gunzTarPerm extractEntry lib/mongodb/collection.js
64 silly gunzTarPerm extractEntry lib/mongodb/utils.js
65 silly gunzTarPerm extractEntry lib/mongodb/cursorstream.js
66 silly gunzTarPerm extractEntry lib/mongodb/connection/connection.js
67 silly gunzTarPerm extractEntry lib/mongodb/connection/connection_pool.js
68 silly gunzTarPerm extractEntry lib/mongodb/connection/connection_utils.js
69 silly gunzTarPerm extractEntry lib/mongodb/connection/mongos.js
70 silly gunzTarPerm extractEntry lib/mongodb/connection/read_preference.js
71 silly gunzTarPerm extractEntry lib/mongodb/connection/repl_set.js
72 silly gunzTarPerm extractEntry lib/mongodb/connection/server.js
73 silly gunzTarPerm extractEntry lib/mongodb/connection/strategies/ping_strategy.js
74 silly gunzTarPerm extractEntry lib/mongodb/connection/strategies/statistics_strategy.js
75 silly gunzTarPerm extractEntry lib/mongodb/gridfs/chunk.js
76 silly gunzTarPerm extractEntry lib/mongodb/gridfs/grid.js
77 silly gunzTarPerm extractEntry lib/mongodb/gridfs/gridstore.js
78 silly gunzTarPerm extractEntry lib/mongodb/gridfs/readstream.js
79 silly gunzTarPerm extractEntry lib/mongodb/commands/base_command.js
80 silly gunzTarPerm extractEntry lib/mongodb/commands/db_command.js
81 silly gunzTarPerm extractEntry lib/mongodb/commands/delete_command.js
82 silly gunzTarPerm extractEntry lib/mongodb/commands/get_more_command.js
83 silly gunzTarPerm extractEntry lib/mongodb/commands/insert_command.js
84 silly gunzTarPerm extractEntry lib/mongodb/commands/kill_cursor_command.js
85 silly gunzTarPerm extractEntry lib/mongodb/commands/query_command.js
86 silly gunzTarPerm extractEntry lib/mongodb/commands/update_command.js
87 silly gunzTarPerm extractEntry lib/mongodb/responses/mongo_reply.js
88 silly gunzTarPerm extractEntry Makefile
89 silly gunzTarPerm extractEntry .travis.yml
90 silly gunzTarPerm extractEntry Readme.md
91 silly gunzTarPerm extractEntry test_gs_weird_bug_streamed.tmp
92 silly gunzTarPerm extractEntry test_gs_working_field_read.tmp
93 silly gunzTarPerm extractEntry test_stream_write_2.tmp
94 silly gunzTarPerm extractEntry upload.py
95 verbose read json /node/projects/deaddrop/node_modules/mongodb/package.json
96 silly lockFile 27020782-ts-deaddrop-node-modules-mongodb /node/projects/deaddrop/node_modules/mongodb
97 info preinstall mongodb@1.1.4
98 verbose from cache /node/projects/deaddrop/node_modules/mongodb/package.json
99 verbose readDependencies using package.json deps
100 verbose from cache /node/projects/deaddrop/node_modules/mongodb/package.json
101 verbose readDependencies using package.json deps
102 verbose cache add [ 'bson@0.1.1', null ]
103 silly cache add name=undefined spec="bson@0.1.1" args=["bson@0.1.1",null]
104 verbose parsed url { pathname: 'bson@0.1.1',
104 verbose parsed url   path: 'bson@0.1.1',
104 verbose parsed url   href: 'bson@0.1.1' }
105 silly cache add name="bson" spec="0.1.1" args=["bson","0.1.1"]
106 verbose parsed url { pathname: '0.1.1', path: '0.1.1', href: '0.1.1' }
107 verbose addNamed [ 'bson', '0.1.1' ]
108 verbose addNamed [ '0.1.1', '0.1.1' ]
109 silly lockFile 9fcd5433-bson-0-1-1 bson@0.1.1
110 verbose lock bson@0.1.1 /Users/dclowd9901/.npm/9fcd5433-bson-0-1-1.lock
111 verbose url raw bson/0.1.1
112 verbose url resolving [ 'https://registry.npmjs.org/', './bson/0.1.1' ]
113 verbose url resolved https://registry.npmjs.org/bson/0.1.1
114 info retry registry request attempt 1 at 08:36:01
115 verbose etag "C8MMCBAEZI06E1UPIWGP9YRIZ"
116 http GET https://registry.npmjs.org/bson/0.1.1
117 http 304 https://registry.npmjs.org/bson/0.1.1
118 silly registry.get cb [ 304,
118 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
118 silly registry.get     etag: '"C8MMCBAEZI06E1UPIWGP9YRIZ"',
118 silly registry.get     date: 'Wed, 15 Aug 2012 15:36:02 GMT',
118 silly registry.get     'content-length': '0' } ]
119 verbose etag bson/0.1.1 from cache
120 verbose read json /Users/dclowd9901/.npm/bson/0.1.1/package/package.json
121 warn package.json bson@0.1.1 No README.md file found!
122 silly lockFile 9fcd5433-bson-0-1-1 bson@0.1.1
123 silly resolved [ { name: 'bson',
123 silly resolved     description: 'A bson parser for node.js and the browser',
123 silly resolved     keywords: [ 'mongodb', 'bson', 'parser' ],
123 silly resolved     version: '0.1.1',
123 silly resolved     author: { name: 'Christian Amor Kvalheim', email: 'christkv@gmail.com' },
123 silly resolved     contributors: [],
123 silly resolved     repository: { type: 'git', url: 'git@github.com:mongodb/js-bson.git' },
123 silly resolved     bugs:
123 silly resolved      { mail: 'node-mongodb-native@googlegroups.com',
123 silly resolved        url: 'https://github.com/mongodb/js-bson/issues' },
123 silly resolved     devDependencies: { nodeunit: '0.7.3', gleak: '0.2.3' },
123 silly resolved     config: { native: false },
123 silly resolved     main: './lib/bson/index',
123 silly resolved     directories: { lib: './lib/bson' },
123 silly resolved     engines: { node: '>=0.4.0' },
123 silly resolved     scripts: { install: 'node install.js', test: 'make test' },
123 silly resolved     licenses: [ [Object] ],
123 silly resolved     readme: 'ERROR: No README.md file found!',
123 silly resolved     _id: 'bson@0.1.1',
123 silly resolved     _from: 'bson@0.1.1' } ]
124 info install bson@0.1.1 into /node/projects/deaddrop/node_modules/mongodb
125 info installOne bson@0.1.1
126 verbose from cache /Users/dclowd9901/.npm/bson/0.1.1/package/package.json
127 info /node/projects/deaddrop/node_modules/mongodb/node_modules/bson unbuild
128 verbose read json /node/projects/deaddrop/node_modules/mongodb/node_modules/bson/package.json
129 verbose tar unpack /Users/dclowd9901/.npm/bson/0.1.1/package.tgz
130 silly lockFile 3eb8ea8c-odules-mongodb-node-modules-bson /node/projects/deaddrop/node_modules/mongodb/node_modules/bson
131 verbose lock /node/projects/deaddrop/node_modules/mongodb/node_modules/bson /Users/dclowd9901/.npm/3eb8ea8c-odules-mongodb-node-modules-bson.lock
132 silly gunzTarPerm modes [ '755', '644' ]
133 silly gunzTarPerm extractEntry package.json
134 silly gunzTarPerm extractEntry README
135 silly gunzTarPerm extractEntry install.js
136 silly gunzTarPerm extractEntry .travis.yml
137 silly gunzTarPerm extractEntry benchmarks/benchmarks.js
138 silly gunzTarPerm extractEntry ext/index.js
139 silly gunzTarPerm extractEntry ext/bson.cc
140 silly gunzTarPerm extractEntry ext/bson.h
141 silly gunzTarPerm extractEntry ext/Makefile
142 silly gunzTarPerm extractEntry ext/wscript
143 silly gunzTarPerm extractEntry lib/bson/binary.js
144 silly gunzTarPerm extractEntry lib/bson/code.js
145 silly gunzTarPerm extractEntry lib/bson/db_ref.js
146 silly gunzTarPerm extractEntry lib/bson/double.js
147 silly gunzTarPerm extractEntry lib/bson/float_parser.js
148 silly gunzTarPerm extractEntry lib/bson/bson.js
149 silly gunzTarPerm extractEntry lib/bson/long.js
150 silly gunzTarPerm extractEntry lib/bson/max_key.js
151 silly gunzTarPerm extractEntry lib/bson/min_key.js
152 silly gunzTarPerm extractEntry lib/bson/objectid.js
153 silly gunzTarPerm extractEntry lib/bson/symbol.js
154 silly gunzTarPerm extractEntry lib/bson/binary_parser.js
155 silly gunzTarPerm extractEntry lib/bson/timestamp.js
156 silly gunzTarPerm extractEntry lib/bson/index.js
157 silly gunzTarPerm extractEntry Makefile
158 silly gunzTarPerm extractEntry test/browser/bson_test.js
159 silly gunzTarPerm extractEntry test/browser/nodeunit.js
160 silly gunzTarPerm extractEntry test/browser/suite2.js
161 silly gunzTarPerm extractEntry test/browser/suite3.js
162 silly gunzTarPerm extractEntry test/browser/test.html
163 silly gunzTarPerm extractEntry test/node/bson_array_test.js
164 silly gunzTarPerm extractEntry test/node/bson_parser_comparision_test.js
165 silly gunzTarPerm extractEntry test/node/bson_test.js
166 silly gunzTarPerm extractEntry test/node/bson_typed_array_test.js
167 silly gunzTarPerm extractEntry test/node/test_full_bson.js
168 silly gunzTarPerm extractEntry test/node/to_bson_test.js
169 silly gunzTarPerm extractEntry test/node/data/test_gs_weird_bug.png
170 silly gunzTarPerm extractEntry test/node/tools/utils.js
171 silly gunzTarPerm extractEntry tools/gleak.js
172 silly gunzTarPerm extractEntry tools/jasmine-1.1.0/jasmine-html.js
173 silly gunzTarPerm extractEntry tools/jasmine-1.1.0/jasmine.js
174 silly gunzTarPerm extractEntry tools/jasmine-1.1.0/jasmine.css
175 silly gunzTarPerm extractEntry tools/jasmine-1.1.0/jasmine_favicon.png
176 silly gunzTarPerm extractEntry tools/jasmine-1.1.0/MIT.LICENSE
177 verbose read json /node/projects/deaddrop/node_modules/mongodb/node_modules/bson/package.json
178 silly lockFile 3eb8ea8c-odules-mongodb-node-modules-bson /node/projects/deaddrop/node_modules/mongodb/node_modules/bson
179 info preinstall bson@0.1.1
180 verbose from cache /node/projects/deaddrop/node_modules/mongodb/node_modules/bson/package.json
181 verbose readDependencies using package.json deps
182 verbose from cache /node/projects/deaddrop/node_modules/mongodb/node_modules/bson/package.json
183 verbose readDependencies using package.json deps
184 silly resolved []
185 verbose about to build /node/projects/deaddrop/node_modules/mongodb/node_modules/bson
186 info build /node/projects/deaddrop/node_modules/mongodb/node_modules/bson
187 verbose from cache /node/projects/deaddrop/node_modules/mongodb/node_modules/bson/package.json
188 verbose linkStuff [ false,
188 verbose linkStuff   false,
188 verbose linkStuff   false,
188 verbose linkStuff   '/node/projects/deaddrop/node_modules/mongodb/node_modules' ]
189 info linkStuff bson@0.1.1
190 verbose linkBins bson@0.1.1
191 verbose linkMans bson@0.1.1
192 verbose rebuildBundles bson@0.1.1
193 info install bson@0.1.1
194 verbose unsafe-perm in lifecycle true
195 silly exec sh "-c" "node install.js"
196 silly sh,-c,node install.js,/node/projects/deaddrop/node_modules/mongodb/node_modules/bson spawning
197 info bson@0.1.1 Failed to exec install script
198 info /node/projects/deaddrop/node_modules/mongodb/node_modules/bson unbuild
199 verbose from cache /node/projects/deaddrop/node_modules/mongodb/node_modules/bson/package.json
200 info preuninstall bson@0.1.1
201 info uninstall bson@0.1.1
202 verbose false,/node/projects/deaddrop/node_modules,/node/projects/deaddrop/node_modules/mongodb/node_modules unbuild bson@0.1.1
203 info postuninstall bson@0.1.1
204 verbose about to build /node/projects/deaddrop/node_modules/mongodb
205 info /node/projects/deaddrop/node_modules/mongodb unbuild
206 verbose from cache /node/projects/deaddrop/node_modules/mongodb/package.json
207 info preuninstall mongodb@1.1.4
208 info uninstall mongodb@1.1.4
209 verbose true,/node/projects/deaddrop/node_modules,/node/projects/deaddrop/node_modules unbuild mongodb@1.1.4
210 info postuninstall mongodb@1.1.4
211 error bson@0.1.1 install: `node install.js`
211 error `sh "-c" "node install.js"` failed with 127
212 error Failed at the bson@0.1.1 install script.
212 error This is most likely a problem with the bson package,
212 error not with npm itself.
212 error Tell the author that this fails on your system:
212 error     node install.js
212 error You can get their info via:
212 error     npm owner ls bson
212 error There is likely additional logging output above.
213 error System Darwin 11.4.0
214 error command "node" "/usr/local/bin/npm" "install" "mongodb"
215 error cwd /node/projects/deaddrop
216 error node -v v0.8.6
217 error npm -v 1.1.48
218 error code ELIFECYCLE
219 verbose exit [ 1, true ]
